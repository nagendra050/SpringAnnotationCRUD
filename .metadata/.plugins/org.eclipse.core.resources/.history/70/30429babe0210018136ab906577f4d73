@Configuration
@ComponentScan(basePackages={"org.javasavvy.demo.services","org.javasavvy.demo.dao"})
@EnableTransactionManagement
public class DatabaseConfig {
 
 @Bean
 public DriverManagerDataSource getDataSource() {
       DriverManagerDataSource dataSource = new DriverManagerDataSource();
          dataSource.setDriverClassName("com.mysql.jdbc.Driver");
          dataSource.setUrl("jdbc:mysql://localhost:3306/javasavvy");
          dataSource.setUsername("root");
          dataSource.setPassword("root");
      return dataSource;
 }
 @Bean
 @Autowired
 public PlatformTransactionManager getTransactionManager(EntityManagerFactory emf) throws NamingException{
      JpaTransactionManager jpaTransaction = new JpaTransactionManager();
      jpaTransaction.setEntityManagerFactory(emf);
      return jpaTransaction;
 }
@Bean
 public LocalContainerEntityManagerFactoryBean getEMF() {
 
     LocalContainerEntityManagerFactoryBean emf = new LocalContainerEntityManagerFactoryBean();
     emf.setDataSource(getDataSource());
     emf.setPersistenceUnitName("spring-jpa-unit");
     emf.setJpaVendorAdapter(getHibernateAdapter());
         Properties jpaProperties = new Properties();
        jpaProperties.put("hibernate.dialect", "org.hibernate.dialect.MySQLDialect");
        jpaProperties.put("hibernate.hbm2ddl.auto", "update");
        jpaProperties.put("hibernate.show_sql", "true");
        jpaProperties.put("hibernate.format_sql","false");
      emf.setJpaProperties(jpaProperties);
   return emf;
 }
  @Bean
  public JpaVendorAdapter getHibernateAdapter() {
      return new HibernateJpaVendorAdapter();
  }
 
}